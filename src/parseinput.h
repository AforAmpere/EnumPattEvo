void parse_input(int argc, char** argv, bool loading=false);

void check_parsed();

vector<string> OptionState::startingpatterns = vector<string>();
vector<string> OptionState::targetpatterns = vector<string>();
vector<int> OptionState::xdims = vector<int>();
vector<int> OptionState::ydims = vector<int>();
vector<int> OptionState::gendepths = vector<int>();
vector<string> OptionState::rulespace = vector<string>();
vector<int> OptionState::allow_evolve = vector<int>();
vector<int> OptionState::enforce_move = vector<int>();
int OptionState::minperiod = 0;
string OptionState::filename = string();
int OptionState::reporting_interval = 0;
bool OptionState::sssssmode = false;
vector<int> OptionState::prune_minpop = vector<int>();
vector<int> OptionState::prune_maxpop = vector<int>();
vector<int> OptionState::prune_mindispx = vector<int>();
vector<int> OptionState::prune_maxdispx = vector<int>();
vector<int> OptionState::prune_mindispy = vector<int>();
vector<int> OptionState::prune_maxdispy = vector<int>();
vector<int> OptionState::prune_mincomm = vector<int>();
vector<int> OptionState::prune_maxcomm = vector<int>();
vector<int> OptionState::filter_minpop = vector<int>();
vector<int> OptionState::filter_maxpop = vector<int>();
vector<int> OptionState::filter_mindispx = vector<int>();
vector<int> OptionState::filter_maxdispx = vector<int>();
vector<int> OptionState::filter_mindispy = vector<int>();
vector<int> OptionState::filter_maxdispy = vector<int>();
vector<int> OptionState::filter_mincomm = vector<int>();
vector<int> OptionState::filter_maxcomm = vector<int>();
bool OptionState::append = false;
vector<int> OptionState::nosymm = vector<int>();
vector<int> OptionState::noexp = vector<int>();
string OptionState::sssssfolder="";
RulespaceRep OptionState::incomingrulespace;
vector<string> OptionState::slidingmask = vector<string>();
vector<string> OptionState::staticmask = vector<string>();
vector<pair<int,int>> OptionState::staticmaskoff = vector<pair<int,int>>();
vector<string> OptionState::slidingcomp = vector<string>();
vector<string> OptionState::staticcomp = vector<string>();
vector<pair<int,int>> OptionState::staticcompmaskoff = vector<pair<int,int>>();
vector<string> OptionState::help = vector<string>();
vector<int> OptionState::startingbranchoffset = vector<int>();
string OptionState::savefile = string();
string OptionState::loadedargv = string();
long unsigned int OptionState::randseed = LORGE;